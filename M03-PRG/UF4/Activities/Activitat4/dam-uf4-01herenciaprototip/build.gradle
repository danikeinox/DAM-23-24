plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'maven-publish'
}

group 'daniel.Cabrera'
version '4.0'

repositories {
    mavenCentral()
    maven {
        url 'https://gitlab.com/api/v4/projects/51532519/packages/maven'
        // Reemplaza PROJECT_ID con el ID de tu proyecto GitLab
        credentials(HttpHeaderCredentials) {
            name = "Private-Token"
            value = gitLabPrivateToken
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url 'https://gitlab.com/api/v4/projects/51532519/packages/maven' // Reemplaza PROJECT_ID con el ID de tu proyecto GitLab
            credentials(HttpHeaderCredentials) {
                name = "Private-Token"
                value = gitLabPrivateToken
            }
        }
    }
}


ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'daniel.Cabrera.classeAbstractaPrototip'
    mainClass = 'daniel.Cabrera.classeAbstractaPrototip.Main'
}

javafx {
    version = '21'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {

    implementation 'daniel.Cabrera:Fitxers:5.0'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}